#include<stdio.h>
int main()
{
    char ch[]="3+4";
    int sum;
    sum=ch[0]-'0'-ch[2]-'0';
    printf("%d\n",sum);
    return 0;
}

#include<stdio.h>
int main()
{
    char ch[]="1+2+2+1+2+5+4-1-3+4-8";
    int i,sum;
    sum=ch[0]-'0';
    for(i=1;i<25;i++)
        if(ch[i]=='+')
        {
            sum+=ch[i+1]-'0';
        }
        else if(ch[i]=='-')
        {
			sum-=ch[i+1]-'0';
        }
    printf("=%d\n",sum);
    return 0;
}

#include<stdio.h>
int main()
{
    char ch[]="2*2/4*1/1*2*3/2";
    int i,sum;
    sum=ch[0]-'0';
    for(i=1;i<16;i++)
        if(ch[i]=='*')
        {
            sum*=ch[i+1]-'0';
        }
        else if(ch[i]=='/')
        {
            sum/=ch[i+1]-'0';
        }
    printf("=%d\n",sum);
    return 0;
}

#include<stdio.h>
#include<string.h>
int main()
{
    char str[]="2+2*3+2/2-1";
    int i=0,a,b,ans;
    char c,d;
    for(i=1;i<strlen(str);i++)
    {
        switch(str[i])
        {
        case'*':str[i+1]=(str[i-1]-'0')*(str[i+1]-'0')+'0';
            str[i-1]='1';
            break;
        case'/':str[i+1]=(str[i-1]-'0')/(str[i+1]-'0')+'0';
            str[i]='*';
            str[i-1]='1';
            break;
        }
    }
    for(i=1;i<strlen(str);i++)
    {
        if(str[i]=='*')
        {
            str[i+1]=(str[i-1]-'0')*(str[i+1]-'0')+'0';
            str[i]='+';
            str[i-1]='0';
        }
    }
    ans=str[0]-'0';
    for(i=1;i<strlen(str);i++)
    {
        switch(str[i])
        {
        case'+':a=str[i+1]-'0';
            ans+=a;break;
        case'-':
            b=str[i+1]-'0';
            ans-=b;break;
        }
    }
    printf("ans=%d\n",ans);
    return 0;
}
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
int isOperator(char c)
{
    if(c=='+'||c=='-'||c=='*'||c=='/')
        return 1;
    else return 0;
}
void moveOperator(char* p)
{
    while(*p!='\0')
    {
        *p=*(p+1);
        p++;
    }
}
void moveOperand(float*p,float*end)
{
    while(p!=end)
    {
        *p=*(p+1);
        p++;
    }
}
int main()
{
    char strExp[]="1-2.5*4+10.2/5.1"; 
    char operators[100]={'\0'};
    float operands[100];
    float resualt ;
    int operatorsIndex=0;
    for(int i=0;i<strlen(strExp);i++)
    {
        if(isOperator(strExp[i]))
        {
            operators[operatorsIndex]=strExp[i];
            operatorsIndex++;
        }
    }
    int operandsIndex=0;
    for(int i=0;i<strlen(strExp);i++)
    {
        char temp[100]={'\0'};
        int tempIndex=0;

        while(!isOperator(strExp[i]))
        {
            temp[tempIndex]=strExp[i];
            i++;
            tempIndex++;
        }
        float floatV=atof(temp);
        operands[operandsIndex++]=floatV;
    }
    for(int i=0;i<operandsIndex;i++)
    printf("%0.1f\n",operands[i]);
    char*poperator=operators;
    float*poperand=operands;
    while(*poperator!='\0')
    {
        if(*poperator=='*')
        {
            float leftOperand=*poperand;
            float rightOperand=*(poperand+1);
            float resualt=leftOperand*rightOperand;
            *poperand=resualt;
            moveOperator(poperator);
            moveOperand(poperand+1,&operands[operandsIndex--]);
        }
        else if(*poperator=='/')
        {
            float leftOperand=*poperand;
            float rightOperand=*(poperand+1);
            float resualt=leftOperand/rightOperand;
            *poperand=resualt;
            moveOperator(poperator);
            moveOperand(poperand+1,&operands[operandsIndex--]);
        }
        else
        {
            poperator++;
            poperand++;
        }
    }
    poperator=operators;
    poperand=operands;
    while(*poperator!='\0')
    {
        if(*poperator=='+')
        {
            float leftOperand=*poperand;
            float rightOperand=*(poperand+1);
            float resualt=leftOperand+rightOperand;
            *poperand=resualt;
            moveOperator(poperator);
            moveOperand(poperand+1,&operands[operandsIndex--]);
        }
        else if(*poperator=='-')
        {
            float leftOperand=*poperand;
            float rightOperand=*(poperand+1);
            float resualt=leftOperand-rightOperand;
            *poperand=resualt;
            moveOperator(poperator);
            moveOperand(poperand+1,&operands[operandsIndex--]);
        }
    }
    printf("resualt=%0.2lf\n",operands[0]);
    return 0;
}

